def solve():
    k = int(input())
    d = int(input())
    if d == 0:
        return 0
    b = bin(d)[2:]
    b = ('0' * (64 - len(b)) + b)[::-1]
    m = int(b[:k][::-1], 2)
    p = int(b[k:63][::-1], 2)
    s = '-' if b[-1] == '1' else ''
    pt = pow(2, 62 - k)
    kt = pow(2, k)
    if p == pt * 2 - 1:
        return 'NaN'
    if p > 1:
        m += kt
        k -= p
    k += pt - 1
    while m % 2 == 0 and m > 0:
        m //= 2
        k -= 1
    if k == 0:
        return f'{s}{m}'
    elif k < 0:
        return f'{s}{m}*2**{-k}'
    else:
        return f'{s}{m}/2**{k}'


print(solve())