Когда речь идет о производительности, есть несколько факторов, которые можно учесть для оптимизации вашего стейта:

1. Разделение данных: Если ваша главная страница использует только некоторые из состояний (например, только `banner` и `premier`), вы можете рассмотреть возможность разделить их на отдельные слайсы. Таким образом, вы можете избежать загрузки ненужных данных и улучшить производительность страницы.

2. Мемоизация редюсеров: Если у вас есть сложные логики в ваших экстра-редюсерах, вы можете использовать мемоизацию для ускорения процесса обновления стейта. Мемоизация может быть добавлена с помощью библиотеки `reselect`.

3. Определение селекторов: Если у вас есть компоненты, которые часто обновляются в ответ на изменения стейта, вы можете определить селекторы, чтобы избежать лишних вычислений при обновлении нетребуемых компонентов.

4. Описательная структура состояния: Принцип "маленьких кусочков" говорит о том, что состояние должно быть разделено на отдельные кусочки, которые отвечают за конкретные данные или функции. Такая структура позволяет легче управлять состоянием и обновлять только необходимую часть.

5. Пакет redux-toolkit: Если вы еще не используете библиотеку `@reduxjs/toolkit`, рекомендуется ее использовать. Она предоставляет удобные инструменты для создания слайсов, а также оптимизированный и готовый к использованию код для обработки экшенов и редюсеров.