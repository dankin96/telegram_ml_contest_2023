// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

// Importing the necessary OpenZeppelin contracts
import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/math/SafeMath.sol";

// The main contract
contract MyToken is ERC20, Ownable {
    using SafeMath for uint256;

    // Constructor that gives msg.sender all of existing tokens.
    constructor() ERC20("MyToken", "MTKN") {
        _mint(msg.sender, 1000000 * (10 ** uint256(decimals())));
    }

    // Function to mint new tokens
    // Only the owner of the contract can call this function
    function mint(address to, uint256 amount) public onlyOwner {
        _mint(to, amount);
    }

    // Function to burn tokens from a specific address
    // Only the owner of the contract can call this function
    function burn(address from, uint256 amount) public onlyOwner {
        _burn(from, amount);
    }
}
