data.sort(key=lambda n: n[0], reverse=True)
#data = [[5,1], [4,3], [2,2], [1,3]]
max_count = 0

count_b = count_b_in_w * count_w
#count_b - общее кол-во свободных билбордов за все недели
i = 0
while i < len(data):
    if count_b <= 0:
        break
    if data[i][1] > 0:
        if data[i][1] >= count_w:
            max_count = max_count + data[i][0] * count_w
            count_b = count_b - count_w
        else:
            max_count = max_count + data[i][0] * data[i][1]
            count_b = count_b - data[i][1]
    i = i + 1

print(max_count)
#count_w - кол-во недель
#count_b - общее кол-во свободных билбордов за все недели

# 0 [][]  [][]  [][] - count_b = 2 * 3 = 6

# 1
# data[i][1] < count_w: [5, 1]
# Т.к. за цену 5 можно разместить только одну неделю, то
# Увеличиваем max_count: max_count = max_count + data[i][0] * data[i][1]
# Уменьшаем count_b: count_b = count_b - data[i][1]
# [5][] [][]  [][] - count_b = 5

# 2 
# data[i][1] >= count_w: [4, 3]
# Т.к. маскимум можно разместить на длинну недели, то
# Увеличиваем max_count: max_count = max_count + data[i][0] * count_w
# Уменьшаем count_b: count_b = count_b - count_w
# [5][4] [4][]  [4][] - count_b = 2

# 3 
# data[i][1] < count_w: [2, 2]
# Т.к. за цену 2 можно разместить на 2 недели, то
# Увеличиваем max_count: max_count = max_count + data[i][0] * data[i][1]
# Уменьшаем count_b: count_b = count_b - data[i][1]
#[5][4]  [4][2]  [4][2] - count_b = 0 -> break