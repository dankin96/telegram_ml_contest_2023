
#include 
#include 

#define PI 3.14159265
#define AMPLITUDE 100
#define FREQUENCY 5
#define SAMPLING_RATE 500

void generateTriangleWave() {
    // array to store the wave 
    int wave[SAMPLING_RATE];
  
    // generating the wave 
    for (int i = 0; i < SAMPLING_RATE; i++) { 
        double time = static_cast(i) / SAMPLING_RATE;
        double angle = 2.0 * PI * FREQUENCY * time;

        // Triangle waveform: 2*abs(t - 2*floor(t/2) - 1) - 1
        wave[i] = AMPLITUDE * (2 * fabs(remainder(angle, 2.0)) - 1);
    }
  
    // displaying the wave 
    for (int i = 0; i < SAMPLING_RATE; i++)      
        std::cout << wave[i] << std::endl; 
}

int main()
{
    generateTriangleWave();
    return 0;
}
