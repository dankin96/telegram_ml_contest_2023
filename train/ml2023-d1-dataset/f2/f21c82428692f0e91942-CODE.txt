import asyncio
import aiohttp

async def fetch_numbers(session, limit, offset):
    url = f'https://api.shop.megafon.ru/number/3/favoriteNumber?classIds=1&limit={limit}&offset={offset}&mask='
    headers = {"Origin": "https://tatarstan.shop.megafon.ru"}
    async with session.get(url, headers=headers) as response:
        data = await response.json()
        return data['numbers'][0]['phones']

async def main():
    limit = 100
    offset = 0
    numbers = []
    async with aiohttp.ClientSession() as session:
        while True:
            try:
                tmp = await fetch_numbers(session, limit, offset)
                numbers.extend(tmp)
                print(len(tmp))
                if len(tmp) == limit:
                    offset += limit
                else:
                    break
            except Exception as e:
                print(e)
    print(len(numbers))
    print(len(set(numbers)))
    with open('a.txt', 'w') as f:
        f.write('
'.join(map(str, set(numbers))))

if __name__ == '__main__':
    asyncio.run(main())
