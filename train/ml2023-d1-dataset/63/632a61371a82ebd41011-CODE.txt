map $http_upgrade $type {
  default "web";
  websocket "ws";
}

server {
        server_name domain;

        root /home/ubuntu/project/current/public;
        index index.php;

        server_tokens off;
        client_max_body_size 500M;

        access_log off;
        error_log  /var/log/nginx/project-error.log error;

        error_page 404 /index.php;

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        location ~ \.php$ {
            fastcgi_pass unix:/run/php/php8.1-fpm.sock;
            include snippets/fastcgi-php.conf;
        }

        location / {
            try_files /nonexistent @$type;
        }

        location @web {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location @ws {
            proxy_pass             http://127.0.0.1:6001;
            proxy_set_header Host  $host;
            proxy_read_timeout     7d;
            proxy_connect_timeout  7d;
            proxy_redirect         off;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }


        location ~ /\.(?!well-known).* {
            deny all;
        }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/domain/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/domain/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = domain) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        server_name domain;
    listen 80;
    return 404; # managed by Certbot


}