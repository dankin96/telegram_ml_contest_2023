import { CosmosClient } from '@azure/cosmos'
import { app } from '@azure/functions'
import { CheerioCrawler, createCheerioRouter, Dataset } from 'crawlee'
import { v4 as uuidv4 } from 'uuid'
import { bancas, BASE_URL } from '../../constants.js'

const startUrls = [`${BASE_URL.fcc}/concursoOutraSituacao.html`, `${BASE_URL.fcc}/concursoAndamento.html`]

const router = createCheerioRouter()
router.addDefaultHandler(async ({ enqueueLinks, log, $ }) => {
  log.info('enqueueing new URLs')
  await enqueueLinks({
    globs: [`${BASE_URL.fcc}/concursos/**`],
    label: bancas.FCC
  })
})

router.addHandler(bancas.FCC, async ({ request, $, log }) => {
  const concurso = $('title').text().substring(6)
  const arquivos = $('.linkArquivo > .campoLinkArquivo a[href]')
    .map((i, el) => {
      const link = $(el).attr('href')
      if (link.endsWith('.pdf')) {
        const urlSemIndexHtml = request.loadedUrl.replace('index.html', '')
        return { link: urlSemIndexHtml + link }
      }
      log.debug(link)
      return null
    })
    .get()
    .filter((item) => item !== null)
  Dataset.pushData({
    banca: bancas.FCC,
    concurso,
    url: request.loadedUrl,
    arquivos
  })
  log.info(`${concurso}`, { url: request.loadedUrl })
  const client = new CosmosClient({
    endpoint: 'https://127.0.0.1:10000',
    key: 'Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=='
  })
  const database = client.database('jsonlista')
  const container = database.container('concursos')
  await container.items.create({
    id: uuidv4(),
    banca: bancas.FCC,
    concurso,
    url: request.loadedUrl,
    arquivos
    // ...other properties...
  })
})

const crawlerFcc = new CheerioCrawler({
  requestHandler: router
})

app.timer('testTimer', {
  schedule: '0 */5 * * * *',
  handler: async (myTimer, context) => {
    context.log('Timer function processed request.')
    await crawlerFcc.run(startUrls)
  }
})