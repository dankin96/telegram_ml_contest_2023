package main

import "sync"

type Counter struct {
  data  chan int
  total int
}

func NewCounter() *Counter {
  data := make(chan int)
  c := Counter{data, 0}
  go func() {
    for {
      increment := <-data
      c.total += increment
    }
  }()
  return &c
}

func main() {
  counter := NewCounter()
  var wg sync.WaitGroup
  wg.Add(1000000)
  for i := 0; i < 1000000; i++ {
    go func() {
      counter.data <- 1
      wg.Done()
    }()
  }
  wg.Wait()
  println(counter.total)
}