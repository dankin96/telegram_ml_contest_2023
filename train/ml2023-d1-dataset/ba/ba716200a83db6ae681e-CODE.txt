class Solution:
    def matrixMultiplication(self, N, arr):
        dp = [[0 for x in range(N)] for x in range(N)]
    
        # Filling dp[i][i] with 0s as there are no multiplications required for a single matrix
        for i in range(1, N):
            dp[i][i] = 0
    
        # l is the chain length
        for l in range(2, N):
            for i in range(1, N-l+1):
                j = i + l - 1
                dp[i][j] = float('inf')
                for k in range(i, j):
                    q = dp[i][k] + dp[k+1][j] + arr[i-1]*arr[k]*arr[j]
                    if q < dp[i][j]:
                        dp[i][j] = q
    
        return dp[1][N-1]


